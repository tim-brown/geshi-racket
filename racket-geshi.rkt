#lang racket
;;; racket-geshi.rkt
;;; ----------------
;;; Author: Tim Brown <tim@timb.net>
;;; From:   https://github.com/tim-brown/geshi-racket
;;;
;;; Provides the language description structure, style and metadata for the
;;; racket language GeSHi scribbler
(provide geshi-parameters geshi-meta)

(require racket/date)
(require "geshi-utils.rkt"
         "grammar-to-regex.rkt"
         "tasklist.rkt"
         "racket-number-grammar.rkt"
         "racket-keyword-lists.rkt")

(todo "'|...| identifiers")
(todo "#<<HERE strings")
(todo "#;(...) comments -- (note: requires balanced parenthesis regexp)")


(define geshi-meta
  `((author "Tim Brown")
    (email "tim@timb.net")
    (url "(https://github.com/tim-brown/geshi-racket)")
    (date-started "2013-03-01")
    (copyright-date "2013")
    (language "Racket")
    (any-comments #<<EOF
This file was built automatically from the scripts in
 * https://github.com/tim-brown/geshi-racket (you didn't think
 * I typed those NUMBER regular expressions in myself, did you?).
 * Use those scripts to regenerate the file.
EOF
                  )
    (release-version "1.0")
    (release-date ,(parameterize ((date-display-format 'iso-8601)) (date->string (current-date))))
    ))

(define scribble-RktCss-styles
  (hash
   'RktSym     "color: rgb(38, 38, 128)"
   'RktVal     "color: rgb(34, 139, 34)"
   'RktValLink "color: blue"
   'RktPn      "color: rgb(132, 60,36)"
   'RktMod     "color: black"
   'RktStx     "color: rgb(34, 34, 139)"
   'RktStxLink "color: black"
   'RktCmt     "color: rgb(194, 116, 31)"
   ))



(define racket-character-regexp
  (string-append "#\\\\(nul|null|backspace|tab|newline|linefeed|vtab|page|return|space|rubout"
                 "|([0-7]{1,3})|(u[[:xdigit:]]{1,4})|(U[[:xdigit:]]{1,6})|[a-z])"))
(define racket-keyword-regexp ; this is for keywords like #:exists? etc.
  ;;';' is also a delimiter character (a character that stops an identifier. However geshi seems
  ;; to do an html_quote (or whatever) before colouring; the ; at the end of &gt; is then recognised as a
  ;; delimiter, syntax colouring is done on "&gt" which becomes "<span ...>&gt</span>;" , and a spurious
  ;; semicolon appears.
  "#:[^[:space:]()[\\]{}\",']+")
(define racket-symbol-regexp
  ;; "'\\|[^|]*\|"  -- doesn't work... seems to conflict with GeSHi's use of |'s elsewhere
  "'((\\\\ )|([^[:space:]()[\\]{}\",']))+")

(define racket-reader-symbols
  (list "#fl" "#fx" "#s" "#"
        "#f" "#F" "#false" "#t" "#T" "#true"
        "#lang" "#reader"
        "." "'" "#`" "#,@" "#,"
        "#'" "`" "@" ","
        "#%" "#$" "#&" "#~"
        "#rx" "#px" "#<<" ; TODO: move to STRINGS(?)
        "#;" ; TODO: move to COMMENTS(?)
        "#hash"
        "#"))

(define-syntax (style stx)
  (syntax-case stx ()
    [(_ key) #'(string-append
                (hash-ref scribble-RktCss-styles (quote key)
                          "color: yellow; background-color: black") 
                ";")]))

(define geshi-parameters
  `(("LANG_NAME" .      "Racket")
    ("COMMENT_SINGLE" . ((1 . ";")))
    ("COMMENT_MULTI" .  (("#|" . "|#")))
    ("CASE_KEYWORDS" .  GESHI_CAPS_NO_CHANGE)
    ("QUOTEMARKS" .     ("\""))
    ("ESCAPE_CHAR" .    "\\")
    ("KEYWORDS" .       ,racket-KEYWORDS-alist)
    ("SYMBOLS" .         ((0 . ,racket-reader-symbols)))
    ("CASE_SENSITIVE" .    ((GESHI_COMMENTS . false)
                            (1 . false)
                            (2 . false)
                            (3 . false)
                            (4 . false)))
    ;; uses bytes, since parameters->language will transcribe this into PHP literally
    ;; (strings get escaped)
    ("NUMBERS" .          ,racket-NUMBERS-alist)
    ;; STYLES colour scheme taken from racket.css (generated by scribble). Code
    ;; won't look like GeSHi, it'll look more like racket docs
    ("STYLES" . (("KEYWORDS" . ((1 . ,(style RktValLink))
                                (2 . ,(style RktStx))
                                (3 . ,(style RktValLink))
                                (4 . ,(style RktStx))))
                 ("COMMENTS" . ((1 . ,(style RktCmt))
                                ("MULTI" . ,(style RktCmt))))
                 ("ESCAPE_CHAR" . ((0 . "")))
                 ("BRACKETS" . ((0 . ,(style RktPn))))
                 ("STRINGS" . ((0 . ,(style RktVal))))
                 ("NUMBERS" . ((0 . ,(style RktVal))
                               (1 . ,(style RktVal))
                               (2 . ,(style RktVal))
                               (3 . ,(style RktVal))
                               (4 . ,(style RktVal))))
                 ("METHODS" . ((0 . "color: #202020;")))
                 ("SYMBOLS" . ((0 . ,(style RktPn))))
                 ("REGEXPS" . ((1 . ,(style RktVal))
                               (2 . ,(style RktPn))
                               (3 . ,(style RktVal))))
                 ("SCRIPT" . ())))
    ("URLS" . ((1 . "")))
    ("OOLANG" . false)
    ("OBJECT_SPLITTERS" . ())    
    ("REGEXPS" . ((1 . ,racket-character-regexp)
                  (2 . ,racket-keyword-regexp)
                  (3 . ,racket-symbol-regexp)
                  ))
    ("STRICT_MODE_APPLIES" . GESHI_NEVER)
    ("SCRIPT_DELIMITERS" . ())
    ("HIGHLIGHT_STRICT_BLOCK" . ())
    ("PARSER_CONTROL" . (("KEYWORDS" . (("DISALLOWED_BEFORE" . "[[:space:]()[\\]{}\",']")))
                         ("ENABLE_FLAGS" . (
                                            #;("METHODS" . GESHI_NEVER)
                                            #;("SCRIPT" . GESHI_NEVER)
                                            #;("STRINGS" . GESHI_ALWAYS)
                                            #;("ALL" . GESHI_NEVER)
                                            #;("NUMBERS" . GESHI_ALWAYS)
                                            ("SYMBOLS" . GESHI_MAYBE)
                                            ("BRACKETS" . GESHI_MAYBE)
                                            ("REGEXPS" . GESHI_MAYBE)
                                            ("ESCAPE_CHAR" . GESHI_MAYBE)))))
    ))
;;; vim: colorcolumn=121 lisp syntax=racket tw=120